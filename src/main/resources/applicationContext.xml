<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- SPRING SETUP -->

	<!-- Load properties so we can easily change them -->
	<context:property-placeholder location="classpath:application.properties" />

	<!-- Enable Annotation Configuration in order to automatically scan controllers -->
	<context:annotation-config />


	<!-- Allow @Transactional annotations for transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Search for Rest Resources and configure them automatically -->
	<context:component-scan base-package="com.ojas.gst.*" />

	<!-- DATABASE SETUP -->

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop> --> 
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			</props>
		</property>
	</bean>


	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.ssl.trust">${mail.host}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.starttls.enable}</prop>
				<prop key="mail.smtp.auth">${mail.auth}</prop>
			</props>
		</property>
	</bean>


	<bean id="emailTemplate" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mail.username}" />
		<property name="subject" value="${mail.subject}" />
		<property name="text">
			<value>
		<![CDATA[
                   <!--  Hi %s,

                    Thank You for registering for GST.

                    Regards,
                    %s. -->
		]]>
			</value>
		</property>
	</bean>


	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="userDao" class="com.ojas.gst.dao.JpaUserDao" />
	<bean id="accessTokenDao" class="com.ojas.gst.dao.JpaAccessTokenDao" />

	<bean id="userService" class="com.ojas.gst.serviceimpl.DaoUserService">
		<constructor-arg ref="userDao" />
		<constructor-arg ref="accessTokenDao" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>

	<bean id="dataBaseInitializer" class="com.ojas.gst.dao.DataBaseInitializer"
		init-method="initDataBase">
		<constructor-arg ref="userDao" />
		<constructor-arg ref="passwordEncoder" />
	</bean>
	

	<!-- INIT REST COMPONENTS -->

	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />

	<!-- SPRING SECURITY SETUP -->

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="${app.secret}" />
	</bean>

	<!-- Enabling User Authentication Setup -->

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">

			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager" create-session="stateless">
		<security:csrf disabled="true" />
		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="PRE_AUTH_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate"
			access="permitAll" />
		<security:intercept-url method="GET"
			pattern="/rest/blogposts/**" access="hasRole('USER')" />

	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.ojas.gst.rest.UnauthorizedEntryPoint" />

	<bean id="authenticationTokenProcessingFilter"
		class="com.ojas.gst.rest.AuthenticationTokenProcessingFilter">
		<constructor-arg ref="userService" />
	</bean>


</beans>
